name: "PR"

on:
  pull_request:

env:
  INT_ACCOUNT_ID: 12345
  INT_NON_PROD_ACCOUNT_ID: 56789
  INT_PROD_ACCOUNT_ID: 99999

permissions:
  id-token: write
  contents: read
  pull-requests: read
  checks: write

jobs:
  run-tf-plan:
    name: "Run TF Plan"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
    
      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform Plan with Trap
        id: tfplan
        shell: bash
        run: |
          set -euo pipefail

          handle_exit() {
            local code=$?
            echo "Terraform exited with code: $code"

            # Save exit code to GitHub Actions output
            echo "exit_code=$code" >> "$GITHUB_OUTPUT"

            # Optional: fail if terraform errored (exit code 1)
            if [ "$code" -eq 1 ]; then
              echo "Terraform plan failed due to an error"
              exit 1
            fi
          }

          # Trap EXIT to always run handle_exit
          trap handle_exit EXIT

          # Run Terraform plan
          terraform plan -detailed-exitcode

        continue-on-error: true

      - name: Act on Plan Results
        run: |
          echo "Captured Terraform exit code: ${{ steps.tfplan.outputs.exit_code }}"
          if [ "${{ steps.tfplan.outputs.exit_code }}" == "2" ]; then
            echo "‚úÖ Terraform detected infrastructure changes."
          elif [ "${{ steps.tfplan.outputs.exit_code }}" == "0" ]; then
            echo "üü¢ No changes detected."
          else
            echo "‚ùå An unexpected error occurred."
            exit 1
          fi
